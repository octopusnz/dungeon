name: Deploy WASM to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-deploy
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-bindgen-cli
        run: |
          VERSION=$(grep -A1 'name = "wasm-bindgen"' Cargo.lock | grep 'version =' | head -n1 | cut -d '"' -f2)
          cargo install wasm-bindgen-cli --version "$VERSION" --locked

      - name: Build WASM
        run: |
          cargo build --release --target wasm32-unknown-unknown --features wasm --lib
          mkdir -p web/pkg
          wasm-bindgen --target web --no-typescript --out-dir web/pkg target/wasm32-unknown-unknown/release/dungeon_core.wasm
          echo "build_sha=$(git rev-parse --short HEAD)" > web/pkg/version.txt
          touch web/.nojekyll

      - name: Verify build
        run: |
          test -f web/index.html || { echo 'index.html missing in web/'; exit 1; }
          test -f web/pkg/dungeon_core_bg.wasm || { echo 'wasm output missing'; exit 1; }
          ls -la web/pkg/

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
